0,0 0,1 0,2 0,3 0,4 0,5 0,6
1,0 1,1 1,2 1,3 1,4 1,5 1,6
2,0 2,1 2,2 2,3 2,4 2,5 2,6
3,0 3,1 3,2 3,3 3,4 3,5 3,6
4,0 4,1 4,2 4,3 4,4 4,5 4,6
5,0 5,1 5,2 5,3 5,4 5,5 5,6

Diagonales i-d
    - ((2,0), (3,1), (4,2), (5,3)) | -> goto Bucle3;

    - ((1,0), (2,1), (3,2), (4,3)) | -> goto Bucle2;
    - ((2,1), (3,2), (4,3), (5,4)) |

    - ((0,0), (1,1), (2,2), (3,3)) |
    - ((1,1), (2,2), (3,3), (4,4)) | -> goto Bucle1;
    - ((2,2), (3,3), (4,4), (5,5)) |

    - ((0,1), (1,2), (2,3), (3,4)) |
    - ((1,2), (2,3), (3,4), (4,5)) | -> goto Bucle1;
    - ((2,3), (3,4), (4,5), (5,6)) |

    - ((0,2), (1,3), (2,4), (3,5)) | -> goto Bucle2;
    - ((1,3), (2,4), (3,5), (4,6)) |

    - ((0,3), (1,4), (2,5), (3,6)) | -> goto Bucle3;

Bucle1:
for (let i = 0; i < 3; i++) {
    for (let j = i; j < i + 4; j++) {
        board[j][j]...
        board[j][j + 1]
    }
}

Bucle2:
for (let i = 0; i < 2; i++) {
    for (let j = i, k = i + 2; j < i + 4, k < i + 6; j++, k++) {
        board[j][k]...
    }

    for (let j = i + 1, k = i; j < i + 5, k < i + 4; j++, k++) {
        board[j][k]...
    }
}

Bucle3:
for (let i = 0, j = 3; i < 4, j < 7; i++, j++) {
    board[i][j]...
    board[i + 2][j - 3]...
}
